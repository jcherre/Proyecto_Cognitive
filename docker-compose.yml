version: '3'
services:
  mongodb:
    image: mongo:4.1.8-xenial
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGODB_DATA_DIR: ${MONGODB_DATA_DIR}
      MONDODB_LOG_DIR: ${ MONDODB_LOG_DIR}
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend
  flask:
    build:
      context: .
      dockerfile: flask.dockerfile
    container_name: flask
    image: digitalocean.com/flask-python:3.9.10
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: ${APP_PORT}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
    ports:
      - "5000:5000"
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - backend
  react:
    build:
      context: ./
      dockerfile: react.dockerfile
    volumes:
      - reactdata:/app
    ports:
      - 8000:3000
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  reactdata:
    driver: local
